func gcd(a: Int, b: Int): Int {
	if a.lt(b).repr {
		gcd(b, a)
	} else if a.mod(b).eq(0).repr {
		b
	} else {
		gcd(b, a.mod(b))
	}
}

func factorial(n: Int): Int {
	if n.lt(2).repr {
		1
	} else {
		n.mul(factorial(n.sub(1)))
	}
}

@entryPoint
func main() {
	/*gcd(1, 1).print()
	gcd(10, 5).print()
	gcd(100, 70).print()
	gcd(60, 40).print()
	gcd(7, 11).print()*/

	for(0, 20, loopBody)

	loop(while: countDownFrom5)
	// loop { false }
}

func countDownFrom5(): Bool {
	decrement(5)
}

func decrement(n : Int): Bool {
	if n.eq(0) {
		false
	} else {
		n.print()

		decrement(n.sub(1))
	}


}

func loopBody(i: Int) {
	factorial(i.mod(20)).print()
}

func for(low: Int, high: Int, f: func (Int)) {
	if low.neq(high).repr {
		f(low);
		for(low.add(1), high, f)
	}
}

func loop(while body: func(): Bool) {
	if body().repr {
		loop(body)
	}
}
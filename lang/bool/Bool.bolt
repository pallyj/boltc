import intrinsics

@transparent
@defaultBooleanRepr
public struct Bool /*: BooleanLiteralRepr */ {
	internal var repr: i1

	operator func and(left: Self, right: Self): Self {
		Self( integer1And(left.repr, right.repr) )
	}

	operator func or(left: Self, right: Self): Self {
		Self( integer1Or(left.repr, right.repr) )
	}

	operator func xor(left: Self, right: Self): Self {
		Self( integer1Xor(left.repr, right.repr) )
	}

	operator func invert(operand: Self): Self {
		Self(integer1Invert(operand.repr))
	}

	operator func equal(left: Self, right: Self): Self {
		Self(integer1CmpEq(left.repr, right.repr))
	}

	operator func notEqual(left: Self, right: Self): Self {
		Self(integer1CmpNeq(left.repr, right.repr))
	}
}
import intrinsics

let x = "hello";
let y = (x -> len, x -> ptr, x[0]);

/*public func main(): i64 {
	factorial(5)
}*/

func factorial(n: i64): i64 {
	if integer64CmpEq(n, 0) {
		return 1
	} else {
		return integer64Mul( n, factorial(integer64Sub(n, 1)) );
	}
}

/*func if_test(i: i64): i64 {
	if integer64CmpEq(i, 0) {
		return 1
	} else if integer64CmpEq(i, 1) {
		return 10
	} else if integer64CmpEq(i, 2) {
		return 100
	} else if integer64CmpEq(i, 3) {
		return 1000
	}

	return 10000
}*/

func multiplyAccumulate(a: i64, b: i64, c: i64): i64 {
	let d = integer64Mul(a, b);

	return integer64Add(d, c)
}

func returnInfer(): i64 {
	return 1;
}
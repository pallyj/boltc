import intrinsics

@entryPoint
func main() {
	//printLine(matchSquare(1, 1))
	//printLine(matchSquare(2, 2))
	//printLine(matchSquare(2, 4))

	//matchOptional(.some(1))
	//matchOptional(.some(2))
	//matchOptional(.some(3))
	//matchOptional(.none)

	matchExample(.some(10), .none)
	matchExample(.none, .some(5))
	matchExample(.some(1), .some(1))
	matchExample(.none, .none)
}

/*enum Direction {
	case north, east, south, west
}*/


enum Optional_Int {
	case some(Int)
	case none
}

/*
func matchOptional(opt: Optional_Int) {
	match opt {
		.some(1) => print(1),
		.some(2) => print(2),
		.some(n) => print(n),
		_ => print(100)
	}
}

func matchTuple(left: Direction, right: Direction): i1 {
	match (left, right) {
		(.north, .north) => true,
		(.east, .east) => true,
		(.south, .south) => true,
		(.west, .west) => true,
		_ => false,
	}
}

func matchSquare(a: Int, b: Int): i1 {
	match (a, b) {
		(1, 1) => true,
		(2, 4) => true,
		(3, 9) => true,
		(4, 16) => true,
		_ => false,
	}
}*/

func matchExample(a: Optional_Int, b: Optional_Int) {
	match (a, b) {
		(.some(a), .some(b)) => print("both"),
		(.some(a), .none) => print(a),
		(.none, .some(b)) => print(b),
		(.none, .none) => print("none"),
	}
}
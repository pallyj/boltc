import intrinsics

/* testing line comments */
public struct Int {
	var repr: i64

	public func add(b: Int): Int {
		Int(integer64Add(self.repr, b.repr))
	}

	public func mod(b: Int): Int {
		Int(integer64RemSig(self.repr, b.repr))
	}

	public func lt(b: Int): i1 {
		integer64CmpLt(self.repr, b.repr)
	}

	public func eq(b: Int): i1 {
		integer64CmpEq(self.repr, b.repr)
	}

	public func print() {
		printInt(repr)
	}
}

func gcd(a: Int, b: Int): Int {
	if a.lt(b) {
		gcd(b, a)
	} else if a.mod(b).eq(0) {
		b
	} else {
		gcd(b, a.mod(b))
	}
}

func main() {
	gcd(1, 1).print()
	gcd(10, 5).print()
	gcd(100, 70).print()
	gcd(60, 40).print()
	gcd(7, 11).print()
}